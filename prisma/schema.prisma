datasource db {
  provider = "mysql"
  url      = env("PRISMA_DB_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id Int @id @default(autoincrement())
  login String @unique
  repos Repo[]
  projects Project[]
}

model Repo {
  id Int @id @default(autoincrement())
  name String
  fullname String @unique
  url String
  state RepoState
  installationID Int

  owner User? @relation(fields: [ownerID], references: [id])
  ownerID Int?

  project Project?

  @@unique([ownerID, name])
}

model Project {
  id Int @id @default(autoincrement())
  name String
  
  repo Repo @relation(fields: [repoID], references: [id])
  repoID Int

  owner User? @relation(fields: [ownerID], references: [id])
  ownerID Int?

  listeners Listener[]

  @@unique([repoID])
}

model Listener {
  id Int @id @default(autoincrement())

  branch String
  type ListenerType

  autodeploy Boolean @default(true)
  deploytarget DeployTarget

  deployfe Boolean @default(false)
  feplugin Plugin? @relation(fields: [fepluginID], references: [id])
  fepluginID Int?

  builds Build[]
  deploys Deploy[]

  project Project @relation(fields: [projectID], references: [id])
  projectID Int

  @@unique([projectID, branch, type])
}

model Build {
  id Int @id @default(autoincrement())

  commit String
  issue Int?

  log String? //Link to S3 URL of log output
  status BuildStatus @default(QUEUED)
  conclusion BuildConclusion?

  started DateTime?
  ended DateTime?

  idls IDL[]
  deploys Deploy[]

  listener Listener? @relation(fields: [listenerID], references: [id])
  listenerID Int?
}

model Deploy {
  id Int @id @default(autoincrement())

  log String?
  deployed DateTime?

  idls IDL[]

  status BuildStatus @default(QUEUED)
  conclusion BuildConclusion?

  build Build? @relation(fields: [buildID], references: [id])
  buildID Int?

  listener Listener? @relation(fields: [listenerID], references: [id])
  listenerID Int

  frontendDeploy FrontendDeploy? @relation(fields: [frontendDeployID], references: [id])
  frontendDeployID Int? @unique
}

model IDL {
  id Int @id @default(autoincrement())

  program String
  key String @unique
  programid String?

  build Build? @relation(fields: [buildId], references: [id])
  buildId Int? 

  deploy Deploy? @relation(fields: [deployId], references: [id])
  deployId Int? @unique

  @@unique([buildId, program])
  @@unique([deployId, program])
}

model Plugin {
  id Int @id @default(autoincrement())

  name String
  key String 
  target String
  dir String
  idl String
  command String
  output String

  listener Listener[]
}

model FrontendDeploy {
  id Int @id @default(autoincrement())

  log String?
  url String?
  deployed DateTime?

  deploy Deploy?
}

enum RepoState {
  INSTALLED
  ACTIVE
}

enum BuildStatus {
  QUEUED
  IN_PROGRESS
  COMPLETED
}

enum BuildConclusion {
  CANCELLED
  FAILURE
  SUCCESS
  SKIPPED
  TIMEOUT
}

enum ListenerType {
  PULL_REQUEST
  PUSH
}

enum DeployTarget {
  DEV
  TEST
  PROD
}